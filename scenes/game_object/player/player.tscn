[gd_scene load_steps=30 format=3 uid="uid://yoevpxq4p4yx"]

[ext_resource type="Script" uid="uid://b7a730nfxnjpo" path="res://scenes/game_object/player/player.gd" id="1_dovo2"]
[ext_resource type="PackedScene" uid="uid://cmjp036op6ubi" path="res://scenes/component/velocity_component.tscn" id="2_tj6oj"]
[ext_resource type="PackedScene" uid="uid://c8d1r2d4gad0n" path="res://scenes/component/health_component.tscn" id="3_gbew5"]
[ext_resource type="PackedScene" uid="uid://cnwkwdlt8fb8d" path="res://scenes/component/random_steam_player_2d_component.tscn" id="4_gbew5"]
[ext_resource type="AudioStream" uid="uid://4tt38xnidv3i" path="res://assets/audio/sfx/grunting_1_meghan.wav" id="5_oxhc3"]
[ext_resource type="AudioStream" uid="uid://c2hdt0ar5y360" path="res://assets/audio/sfx/grunting_2_meghan.wav" id="6_mxgtx"]
[ext_resource type="AudioStream" uid="uid://bh54if4j72m1u" path="res://assets/audio/sfx/grunting_3_meghan.wav" id="7_l1g56"]
[ext_resource type="AudioStream" uid="uid://cukyx3mohj6sx" path="res://assets/audio/sfx/grunting_6_meghan.wav" id="8_llc7q"]
[ext_resource type="AudioStream" uid="uid://cwtipw3gfsd0w" path="res://assets/audio/sfx/grunting_7_meghan.wav" id="9_bfkik"]
[ext_resource type="Texture2D" uid="uid://ciyabja14aua5" path="res://scenes/game_object/player/player_idle.png" id="12_mxgtx"]
[ext_resource type="Texture2D" uid="uid://b4jtf0v3b4gsa" path="res://scenes/game_object/player/player_run.png" id="12_oxhc3"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_tj6oj"]
bg_color = Color(0.2627451, 0.88235295, 0.7019608, 1)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color(0.24705882, 0.14901961, 0.19215687, 1)

[sub_resource type="CircleShape2D" id="CircleShape2D_s3670"]
radius = 32.0

[sub_resource type="CircleShape2D" id="CircleShape2D_tj6oj"]
radius = 7.0

[sub_resource type="Shader" id="Shader_qiub7"]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 color : source_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false
uniform vec2 number_of_images = vec2(1.0); // number of horizontal and vertical images in the sprite sheet


void vertex() {
	if (add_margins) {
		VERTEX += sign(VERTEX) * width; // replace sign(VERTEX) by (sign(VERTEX) * 2.0 - 1.0) if not Centered
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, vec2 image_top_left, vec2 image_bottom_right, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, image_top_left, image_bottom_right) || texture(texture, xy).a <= 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	vec2 image_top_left = floor(uv * number_of_images) / number_of_images;
	vec2 image_bottom_right = image_top_left + vec2(1.0) / number_of_images;

	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0) * number_of_images);
		
		uv = (uv - texture_pixel_size * width - image_top_left) * TEXTURE_PIXEL_SIZE / texture_pixel_size + image_top_left;
		
		if (uv != clamp(uv, image_top_left, image_bottom_right)) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, image_top_left, image_bottom_right, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_oxhc3"]
resource_local_to_scene = true
shader = SubResource("Shader_qiub7")
shader_parameter/color = Color(0.39215687, 0.7647059, 0.09803922, 1)
shader_parameter/width = 1.0000000475
shader_parameter/pattern = 0
shader_parameter/inside = false
shader_parameter/add_margins = false
shader_parameter/number_of_images = Vector2(8, 1)

[sub_resource type="AtlasTexture" id="AtlasTexture_va4cl"]
atlas = ExtResource("12_mxgtx")
region = Rect2(0, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_h0hb4"]
atlas = ExtResource("12_mxgtx")
region = Rect2(128, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gli4u"]
atlas = ExtResource("12_mxgtx")
region = Rect2(256, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_0dh1u"]
atlas = ExtResource("12_mxgtx")
region = Rect2(384, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_mxgtx"]
atlas = ExtResource("12_oxhc3")
region = Rect2(0, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_l1g56"]
atlas = ExtResource("12_oxhc3")
region = Rect2(128, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_llc7q"]
atlas = ExtResource("12_oxhc3")
region = Rect2(256, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bfkik"]
atlas = ExtResource("12_oxhc3")
region = Rect2(384, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gme53"]
atlas = ExtResource("12_oxhc3")
region = Rect2(512, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_3uig4"]
atlas = ExtResource("12_oxhc3")
region = Rect2(640, 0, 128, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_oxadg"]
atlas = ExtResource("12_oxhc3")
region = Rect2(768, 0, 128, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_va4cl"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_va4cl")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h0hb4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gli4u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0dh1u")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_mxgtx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_l1g56")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_llc7q")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bfkik")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gme53")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3uig4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_oxadg")
}],
"loop": true,
"name": &"run",
"speed": 10.0
}]

[sub_resource type="CircleShape2D" id="CircleShape2D_lvxji"]
radius = 5.0

[node name="Player" type="CharacterBody2D" groups=["player"]]
collision_layer = 0
motion_mode = 1
script = ExtResource("1_dovo2")

[node name="VelocityComponent" parent="." instance=ExtResource("2_tj6oj")]

[node name="HealthComponent" parent="." instance=ExtResource("3_gbew5")]
health_regen = 5.0

[node name="RandomSteamPlayer2DComponent" parent="." instance=ExtResource("4_gbew5")]
streams = Array[AudioStream]([ExtResource("5_oxhc3"), ExtResource("6_mxgtx"), ExtResource("7_l1g56"), ExtResource("8_llc7q"), ExtResource("9_bfkik")])

[node name="Abilities" type="Node" parent="."]

[node name="DamageIntervalTimer" type="Timer" parent="."]
wait_time = 0.5
one_shot = true

[node name="HealthBar" type="ProgressBar" parent="."]
custom_minimum_size = Vector2(32, 6)
offset_left = -16.0
offset_top = -41.0
offset_right = 16.0
offset_bottom = -35.0
pivot_offset = Vector2(16, 3)
theme_override_styles/fill = SubResource("StyleBoxFlat_tj6oj")
max_value = 1.0
value = 0.5
show_percentage = false
metadata/_edit_use_anchors_ = true

[node name="PickupArea2D" type="Area2D" parent="."]
unique_name_in_owner = true
position = Vector2(0, -5)
collision_layer = 16
collision_mask = 0

[node name="PickupCollisionShape2D" type="CollisionShape2D" parent="PickupArea2D"]
unique_name_in_owner = true
shape = SubResource("CircleShape2D_s3670")

[node name="CollisionArea2D" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 8

[node name="CollisionShape2D" type="CollisionShape2D" parent="CollisionArea2D"]
position = Vector2(0, -7)
shape = SubResource("CircleShape2D_tj6oj")

[node name="Visuals" type="Node2D" parent="."]

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="Visuals"]
texture_filter = 1
material = SubResource("ShaderMaterial_oxhc3")
position = Vector2(0, -24)
scale = Vector2(0.75, 0.75)
sprite_frames = SubResource("SpriteFrames_va4cl")
animation = &"idle"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -5)
shape = SubResource("CircleShape2D_lvxji")
